[
    {
        "id": "bf201be41413ed3d",
        "type": "debug",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1110,
        "y": 760,
        "wires": []
    },
    {
        "id": "66acb04555113c30",
        "type": "serial request",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 630,
        "y": 760,
        "wires": [
            [
                "e8e3e0a33234b0fa"
            ]
        ]
    },
    {
        "id": "5f5873c50dad606a",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Search Result",
        "func": "var buf = new Buffer(4); \nbuf[0]=0x53;//restart\nbuf[1]=0x81;//i2c addr (0x40<1)+1, write addr+1 = read addr\nbuf[2]=0x0B;//recieve data 11\nbuf[3]=0x50;//stop\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 760,
        "wires": [
            [
                "66acb04555113c30"
            ]
        ]
    },
    {
        "id": "e8e3e0a33234b0fa",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Check Result",
        "func": "var result={id:\"\",hasNextDevice:false,msg:\"\"};\nvar res=\"\";\nvar hasNextDevice=false;\nvar deviceId=\"\";\n\n\nif(msg.payload[1]==0xAA)\n{\n    res=\"Command Success\";\n    \n    deviceId= msg.payload[2].toString(16) + \":\"\n            + msg.payload[3].toString(16) + \":\"\n            + msg.payload[4].toString(16) + \":\"\n            + msg.payload[5].toString(16) + \":\"\n            + msg.payload[6].toString(16) + \":\"\n            + msg.payload[7].toString(16) + \":\"\n            + msg.payload[8].toString(16) + \":\"\n            + msg.payload[9].toString(16) ;\n    \n    if(msg.payload[10]==0)\n    {\n        hasNextDevice=true;\n    }\n    \n}\nelse\n{\n    res=\"Command Falied\";\n}\n\nresult.id=deviceId;\nresult.hasNextDevice=hasNextDevice;\nresult.msg=res;\n\nmsg.payload=result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 760,
        "wires": [
            [
                "bf201be41413ed3d"
            ]
        ]
    },
    {
        "id": "f9b5ccb05b7452a9",
        "type": "serial out",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 660,
        "y": 640,
        "wires": []
    },
    {
        "id": "cf5ec38d07c7da6b",
        "type": "inject",
        "z": "0e85255e3d7e4fcb",
        "name": "1-Wire Bus Reset and Search Command",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "a066169c80208bff"
            ]
        ]
    },
    {
        "id": "a066169c80208bff",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Send Search Command",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x11;//search command\nbuf[4]=0x02;//data size 2\nbuf[5]=0b00000101;//Param\nbuf[6]=0xF0;//0xF0\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 640,
        "wires": [
            [
                "f9b5ccb05b7452a9",
                "a68da4c4a021a972"
            ]
        ]
    },
    {
        "id": "21f5a041602e56f0",
        "type": "comment",
        "z": "0e85255e3d7e4fcb",
        "name": "DS2485 1-Wire マスタコンバータサンプル",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "f9f1ab30e97da66f",
        "type": "debug",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1210,
        "y": 300,
        "wires": []
    },
    {
        "id": "df1d8da3922d243f",
        "type": "serial request",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 730,
        "y": 300,
        "wires": [
            [
                "273f7e85bb8bdc57"
            ]
        ]
    },
    {
        "id": "5d17551401247545",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Search Result",
        "func": "var buf = new Buffer(4); \nbuf[0]=0x53;//restart\nbuf[1]=0x81;//i2c addr (0x40<1)+1, write addr+1 = read addr\nbuf[2]=0x02;//recieve data 1\nbuf[3]=0x50;//stop\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "df1d8da3922d243f"
            ]
        ]
    },
    {
        "id": "273f7e85bb8bdc57",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Check Result",
        "func": "\n\nif(msg.payload[1]==0xAA)\n{\n    msg.payload=\"Command Sucess\";\n}\nelse\n{\n    msg.payload=\"Command Failed\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 340,
        "wires": [
            [
                "f9f1ab30e97da66f"
            ]
        ]
    },
    {
        "id": "79403650fcef85e2",
        "type": "serial out",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 760,
        "y": 240,
        "wires": []
    },
    {
        "id": "c46faf6eeebf90d3",
        "type": "inject",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "1-Wire Master Reset Command",
        "payloadType": "str",
        "x": 220,
        "y": 240,
        "wires": [
            [
                "b2776ce1285990f2"
            ]
        ]
    },
    {
        "id": "b2776ce1285990f2",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Send Reset Command",
        "func": "\nvar buf = new Buffer(5); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x01;//send data 1\nbuf[3]=0x62;//send data 1\nbuf[4]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 240,
        "wires": [
            [
                "79403650fcef85e2",
                "b1c60c9f57f562ec"
            ]
        ]
    },
    {
        "id": "4ae7eb5cd74c986d",
        "type": "serial out",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 730,
        "y": 400,
        "wires": []
    },
    {
        "id": "475d236ce06c1013",
        "type": "inject",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "1-Wire Set RPUP/BUF Command",
        "payloadType": "str",
        "x": 230,
        "y": 400,
        "wires": [
            [
                "558dd3a01e62fdcd"
            ]
        ]
    },
    {
        "id": "558dd3a01e62fdcd",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Set RPUP/BUF Reg",
        "func": "\nvar buf = new Buffer(9); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x05;//send data 4\nbuf[3]=0x99;//Port Cfg\nbuf[4]=0x03;//Data Size\nbuf[5]=0x11;//Reg 11 \nbuf[6]=0x06;//Low\nbuf[7]=0x00;//High\nbuf[8]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 400,
        "wires": [
            [
                "4ae7eb5cd74c986d",
                "cd27076f2be7d571"
            ]
        ]
    },
    {
        "id": "fec454cb8a77c472",
        "type": "serial request",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 730,
        "y": 460,
        "wires": [
            [
                "273f7e85bb8bdc57"
            ]
        ]
    },
    {
        "id": "5362b7fb133f531a",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Result",
        "func": "var buf = new Buffer(4); \nbuf[0]=0x53;//restart\nbuf[1]=0x81;//i2c addr (0x40<1)+1, write addr+1 = read addr\nbuf[2]=0x02;//recieve data 1\nbuf[3]=0x50;//stop\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 460,
        "wires": [
            [
                "fec454cb8a77c472"
            ]
        ]
    },
    {
        "id": "a68da4c4a021a972",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 700,
        "wires": [
            [
                "5f5873c50dad606a"
            ]
        ]
    },
    {
        "id": "4f884f4fb45230a7",
        "type": "serial request",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 630,
        "y": 1000,
        "wires": [
            [
                "e8e3e0a33234b0fa"
            ]
        ]
    },
    {
        "id": "f2bfe76ce9aec52c",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Search Result",
        "func": "var buf = new Buffer(4); \nbuf[0]=0x53;//restart\nbuf[1]=0x81;//i2c addr (0x40<1)+1, write addr+1 = read addr\nbuf[2]=0x0B;//recieve data 11\nbuf[3]=0x50;//stop\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1000,
        "wires": [
            [
                "4f884f4fb45230a7"
            ]
        ]
    },
    {
        "id": "8b9f775c83f7619a",
        "type": "serial out",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 630,
        "y": 880,
        "wires": []
    },
    {
        "id": "3263ac143e4f93cf",
        "type": "inject",
        "z": "0e85255e3d7e4fcb",
        "name": "1-Wire Only Search Command( Find Next Device )",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 260,
        "y": 820,
        "wires": [
            [
                "1adfc036b23fdea1"
            ]
        ]
    },
    {
        "id": "1adfc036b23fdea1",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Send Search Command",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x11;//search command\nbuf[4]=0x02;//data size 2\nbuf[5]=0b00000001;//Param\nbuf[6]=0xF0;//0xF0\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 880,
        "wires": [
            [
                "8b9f775c83f7619a",
                "030ce321b297257e"
            ]
        ]
    },
    {
        "id": "030ce321b297257e",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 940,
        "wires": [
            [
                "f2bfe76ce9aec52c"
            ]
        ]
    },
    {
        "id": "09805c2f1a4a2739",
        "type": "comment",
        "z": "0e85255e3d7e4fcb",
        "name": "Initialize DS2485",
        "info": "",
        "x": 140,
        "y": 180,
        "wires": []
    },
    {
        "id": "29625430b874deb0",
        "type": "comment",
        "z": "0e85255e3d7e4fcb",
        "name": "Search 1-Wire Devices",
        "info": "",
        "x": 160,
        "y": 520,
        "wires": []
    },
    {
        "id": "5450cbae4b3671f8",
        "type": "comment",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Temp From DS18B20",
        "info": "",
        "x": 160,
        "y": 1120,
        "wires": []
    },
    {
        "id": "5461fcd0e9ea4cb2",
        "type": "serial request",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 1710,
        "y": 1860,
        "wires": [
            [
                "eef69f808612a0bc",
                "4eecc70ec9de30df"
            ]
        ]
    },
    {
        "id": "66b985e11fa73153",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "READ BYTE",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x08;//READ BYTE\nbuf[6]=0x09;//READ BYTE LEN\nbuf[7]=0x50;//stop\n\n\nmsg.payload = buf;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1800,
        "wires": [
            [
                "f05f9d5c946fee17",
                "884eacc91548e20a"
            ]
        ]
    },
    {
        "id": "884eacc91548e20a",
        "type": "serial out",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 1790,
        "y": 1400,
        "wires": []
    },
    {
        "id": "8d94a7230d7f2d5c",
        "type": "inject",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Temp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 1220,
        "y": 1200,
        "wires": [
            [
                "30f67c3b9dc8bda1"
            ]
        ]
    },
    {
        "id": "8d863d1a9c532d06",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Reset Command",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x00;//OW_RESET\nbuf[6]=0b10000010;//OW_RESET RP\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1320,
        "wires": [
            [
                "884eacc91548e20a",
                "061a98baed3b88fc"
            ]
        ]
    },
    {
        "id": "eef69f808612a0bc",
        "type": "debug",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2030,
        "y": 1860,
        "wires": []
    },
    {
        "id": "afa0625e57eed3f1",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "MATCH COMMAND",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0x55;//MATCH ROM\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1380,
        "wires": [
            [
                "884eacc91548e20a",
                "13e7eb1b1f7e2d29"
            ]
        ]
    },
    {
        "id": "d17e78a2b2978f45",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "SEND ROMID",
        "func": "\n//Please change your romid according to your search result.\nvar romid=[0x3B,0x8A,0x9D,0xF2,0x0E,0x9C,0x4C,0x35];\n\n\n\nvar buf = new Buffer(16); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x0C;//send data 12\nbuf[3]=0x88;//Script Command\nbuf[4]=0x0A;//Len\nbuf[5]=0x09;//WRITE BYTE\nbuf[6]=0x08;//WRITE BYTE LEN\nbuf[7]=romid[0];\nbuf[8]=romid[1];\nbuf[9]=romid[2];\nbuf[10]=romid[3];\nbuf[11]=romid[4];\nbuf[12]=romid[5];\nbuf[13]=romid[6];\nbuf[14]=romid[7];\nbuf[15]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1440,
        "wires": [
            [
                "884eacc91548e20a",
                "5930b816da2f2919"
            ]
        ]
    },
    {
        "id": "256b2649eaa4579e",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "CONVERT T COMMAND",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0x44;//Convert T\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1500,
        "wires": [
            [
                "884eacc91548e20a",
                "82a32e29b2178f39"
            ]
        ]
    },
    {
        "id": "061a98baed3b88fc",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1380,
        "wires": [
            [
                "afa0625e57eed3f1"
            ]
        ]
    },
    {
        "id": "13e7eb1b1f7e2d29",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1440,
        "wires": [
            [
                "d17e78a2b2978f45"
            ]
        ]
    },
    {
        "id": "5930b816da2f2919",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1500,
        "wires": [
            [
                "256b2649eaa4579e"
            ]
        ]
    },
    {
        "id": "82a32e29b2178f39",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1350,
        "y": 1560,
        "wires": [
            [
                "7b0b96b5cae67d98"
            ]
        ]
    },
    {
        "id": "7b0b96b5cae67d98",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Reset Command",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x00;//OW_RESET\nbuf[6]=0b10000010;//OW_RESET RP\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1560,
        "wires": [
            [
                "884eacc91548e20a",
                "a1733566191a294b"
            ]
        ]
    },
    {
        "id": "a1733566191a294b",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1620,
        "wires": [
            [
                "41ef5b17dce81efe"
            ]
        ]
    },
    {
        "id": "41ef5b17dce81efe",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "MATCH COMMAND",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0x55;//MATCH ROM\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1620,
        "wires": [
            [
                "884eacc91548e20a",
                "334907e37a98dc70"
            ]
        ]
    },
    {
        "id": "999e881f538b46cc",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "SEND ROMID",
        "func": "\n//Please change your romid according to your search result.\nvar romid=[0x3B,0x8A,0x9D,0xF2,0x0E,0x9C,0x4C,0x35];\n\n\n\nvar buf = new Buffer(16); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x0C;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x0A;//Len\nbuf[5]=0x09;//WRITE BYTE\nbuf[6]=0x08;//WRITE BYTE LEN\nbuf[7]=romid[0];\nbuf[8]=romid[1];\nbuf[9]=romid[2];\nbuf[10]=romid[3];\nbuf[11]=romid[4];\nbuf[12]=romid[5];\nbuf[13]=romid[6];\nbuf[14]=romid[7];\nbuf[15]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1680,
        "wires": [
            [
                "884eacc91548e20a",
                "12be37db1293ab7a"
            ]
        ]
    },
    {
        "id": "334907e37a98dc70",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1680,
        "wires": [
            [
                "999e881f538b46cc"
            ]
        ]
    },
    {
        "id": "12be37db1293ab7a",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1740,
        "wires": [
            [
                "130defb824ba649a"
            ]
        ]
    },
    {
        "id": "130defb824ba649a",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "READ SCRATCHPAD ",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0xBE;//READ SCRATCHPAD \nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1740,
        "wires": [
            [
                "884eacc91548e20a",
                "907b95f3da98940f"
            ]
        ]
    },
    {
        "id": "907b95f3da98940f",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1800,
        "wires": [
            [
                "66b985e11fa73153"
            ]
        ]
    },
    {
        "id": "672a8700f9e11525",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Search Result",
        "func": "var buf = new Buffer(4); \nbuf[0]=0x53;//restart\nbuf[1]=0x81;//i2c addr (0x40<1)+1, write addr+1 = read addr\nbuf[2]=0x0D;//recieve data 12\nbuf[3]=0x50;//stop\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1860,
        "wires": [
            [
                "5461fcd0e9ea4cb2"
            ]
        ]
    },
    {
        "id": "f05f9d5c946fee17",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1860,
        "wires": [
            [
                "672a8700f9e11525"
            ]
        ]
    },
    {
        "id": "4eecc70ec9de30df",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Check Result",
        "func": "\nvar tmpByte=msg.payload[5]*256.0+msg.payload[4]*1.0;\n\nvar tmpFloat=0.0;\n\nif(tmpByte&0xF800)\n{\n    tmpFloat=-1.0*((~tmpByte+1)*0.0625);\n}\nelse\n{\n    tmpFloat=tmpByte*0.0625;\n}\n\n\nmsg.payload=tmpFloat+\" ℃\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1920,
        "wires": [
            [
                "eef69f808612a0bc"
            ]
        ]
    },
    {
        "id": "615ad8ebe1d51f2c",
        "type": "serial request",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 630,
        "y": 1780,
        "wires": [
            [
                "277d6769bb03061f",
                "ecb559086ccf2ca3"
            ]
        ]
    },
    {
        "id": "d9b010a61248a234",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "READ BYTE",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x08;//READ BYTE\nbuf[6]=0x09;//READ BYTE LEN\nbuf[7]=0x50;//stop\n\n\nmsg.payload = buf;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1720,
        "wires": [
            [
                "afda8c7b3bc73bf2",
                "2b608b9dd3a35fca"
            ]
        ]
    },
    {
        "id": "2b608b9dd3a35fca",
        "type": "serial out",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "serial": "7b1a2a97.73a96c",
        "x": 710,
        "y": 1320,
        "wires": []
    },
    {
        "id": "6b9d19002f200658",
        "type": "inject",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Temp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 140,
        "y": 1180,
        "wires": [
            [
                "fb5f2f25dafb0d20"
            ]
        ]
    },
    {
        "id": "fb5f2f25dafb0d20",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Reset Command",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x00;//OW_RESET\nbuf[6]=0b10000010;//OW_RESET RP\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1240,
        "wires": [
            [
                "2b608b9dd3a35fca",
                "164b98c701ae6697"
            ]
        ]
    },
    {
        "id": "277d6769bb03061f",
        "type": "debug",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 950,
        "y": 1780,
        "wires": []
    },
    {
        "id": "5a4e41a5e3f40c78",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "MATCH COMMAND",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0x55;//MATCH ROM\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1300,
        "wires": [
            [
                "2b608b9dd3a35fca",
                "6b66e60e140a5e99"
            ]
        ]
    },
    {
        "id": "cf8176e26d44325e",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "SEND ROMID",
        "func": "\n//Please change your romid according to your search result.\n//var romid=[0x28,0xE1,0x3B,0x6E,0x08,0x00,0x00,0x54];\nvar romid=[0x28,0xE4,0xD4,0x6C,0x08,0x00,0x00,0x0D];\n\n\nvar buf = new Buffer(16); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x0C;//send data 12\nbuf[3]=0x88;//Script Command\nbuf[4]=0x0A;//Len\nbuf[5]=0x09;//WRITE BYTE\nbuf[6]=0x08;//WRITE BYTE LEN\nbuf[7]=romid[0];\nbuf[8]=romid[1];\nbuf[9]=romid[2];\nbuf[10]=romid[3];\nbuf[11]=romid[4];\nbuf[12]=romid[5];\nbuf[13]=romid[6];\nbuf[14]=romid[7];\nbuf[15]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1360,
        "wires": [
            [
                "2b608b9dd3a35fca",
                "47d7e4cb9976688b"
            ]
        ]
    },
    {
        "id": "d8bae1fd3fd1788b",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "CONVERT T COMMAND",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0x44;//Convert T\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "2b608b9dd3a35fca",
                "ba2f9dd8387b3815"
            ]
        ]
    },
    {
        "id": "164b98c701ae6697",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 1300,
        "wires": [
            [
                "5a4e41a5e3f40c78"
            ]
        ]
    },
    {
        "id": "6b66e60e140a5e99",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 1360,
        "wires": [
            [
                "cf8176e26d44325e"
            ]
        ]
    },
    {
        "id": "47d7e4cb9976688b",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 1420,
        "wires": [
            [
                "d8bae1fd3fd1788b"
            ]
        ]
    },
    {
        "id": "ba2f9dd8387b3815",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "750",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 1480,
        "wires": [
            [
                "5ffa2f3b797a69f9"
            ]
        ]
    },
    {
        "id": "5ffa2f3b797a69f9",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Reset Command",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x00;//OW_RESET\nbuf[6]=0b10000010;//OW_RESET RP\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1480,
        "wires": [
            [
                "2b608b9dd3a35fca",
                "fd8b7f046b2f183c"
            ]
        ]
    },
    {
        "id": "fd8b7f046b2f183c",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 1540,
        "wires": [
            [
                "c7da1c63ba8a464b"
            ]
        ]
    },
    {
        "id": "c7da1c63ba8a464b",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "MATCH COMMAND",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0x55;//MATCH ROM\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1540,
        "wires": [
            [
                "2b608b9dd3a35fca",
                "eb52396b9ade686a"
            ]
        ]
    },
    {
        "id": "5d2c8456cc93beaf",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "SEND ROMID",
        "func": "\n//Please change your romid according to your search result.\n//var romid=[0x28,0xE1,0x3B,0x6E,0x08,0x00,0x00,0x54];\nvar romid=[0x28,0xE4,0xd4,0x6c,0x08,0x00,0x00,0x0d];\n\n\nvar buf = new Buffer(16); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x0C;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x0A;//Len\nbuf[5]=0x09;//WRITE BYTE\nbuf[6]=0x08;//WRITE BYTE LEN\nbuf[7]=romid[0];\nbuf[8]=romid[1];\nbuf[9]=romid[2];\nbuf[10]=romid[3];\nbuf[11]=romid[4];\nbuf[12]=romid[5];\nbuf[13]=romid[6];\nbuf[14]=romid[7];\nbuf[15]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1600,
        "wires": [
            [
                "2b608b9dd3a35fca",
                "15222483ef00d57b"
            ]
        ]
    },
    {
        "id": "eb52396b9ade686a",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 1600,
        "wires": [
            [
                "5d2c8456cc93beaf"
            ]
        ]
    },
    {
        "id": "15222483ef00d57b",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 1660,
        "wires": [
            [
                "a9d397670f3d6dfe"
            ]
        ]
    },
    {
        "id": "a9d397670f3d6dfe",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "READ SCRATCHPAD ",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0xBE;//READ SCRATCHPAD \nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1660,
        "wires": [
            [
                "2b608b9dd3a35fca",
                "3f8f596c8e2e6541"
            ]
        ]
    },
    {
        "id": "3f8f596c8e2e6541",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 1720,
        "wires": [
            [
                "d9b010a61248a234"
            ]
        ]
    },
    {
        "id": "7eb9cfab1ac5c076",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Search Result",
        "func": "var buf = new Buffer(4); \nbuf[0]=0x53;//restart\nbuf[1]=0x81;//i2c addr (0x40<1)+1, write addr+1 = read addr\nbuf[2]=0x0D;//recieve data 12\nbuf[3]=0x50;//stop\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1780,
        "wires": [
            [
                "615ad8ebe1d51f2c"
            ]
        ]
    },
    {
        "id": "afda8c7b3bc73bf2",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 1780,
        "wires": [
            [
                "7eb9cfab1ac5c076"
            ]
        ]
    },
    {
        "id": "ecb559086ccf2ca3",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Check Result",
        "func": "\nvar tmpByte=msg.payload[5]*256.0+msg.payload[4]*1.0;\n\nvar tmpFloat=0.0;\n\nif(tmpByte&0xF800)\n{\n    tmpFloat=-1.0*((~tmpByte+1)*0.0625);\n}\nelse\n{\n    tmpFloat=tmpByte*0.0625;\n}\n\n\nmsg.payload=tmpFloat+\" ℃\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1840,
        "wires": [
            [
                "277d6769bb03061f"
            ]
        ]
    },
    {
        "id": "0f39976d036ccaa8",
        "type": "comment",
        "z": "0e85255e3d7e4fcb",
        "name": "Get Temp From MAX31850K",
        "info": "",
        "x": 1260,
        "y": 1140,
        "wires": []
    },
    {
        "id": "30f67c3b9dc8bda1",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "Reset Command",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x00;//OW_RESET\nbuf[6]=0b10000010;//OW_RESET RP\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1200,
        "wires": [
            [
                "8163dd9e60446822",
                "884eacc91548e20a"
            ]
        ]
    },
    {
        "id": "b1dcb72fd375e344",
        "type": "function",
        "z": "0e85255e3d7e4fcb",
        "name": "SEARCH COMMAND",
        "func": "\nvar buf = new Buffer(8); \nbuf[0]=0x53;//start\nbuf[1]=0x80;//i2c addr (0x40<1)\nbuf[2]=0x04;//send data 4\nbuf[3]=0x88;//Script Command\nbuf[4]=0x02;//Len\nbuf[5]=0x03;//WRITE BYTE\nbuf[6]=0xF0;//SEARCH ROM\nbuf[7]=0x50;//stop\n\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1260,
        "wires": [
            [
                "884eacc91548e20a",
                "a6da5b529ca7ca5e"
            ]
        ]
    },
    {
        "id": "8163dd9e60446822",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1260,
        "wires": [
            [
                "b1dcb72fd375e344"
            ]
        ]
    },
    {
        "id": "a6da5b529ca7ca5e",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1340,
        "y": 1320,
        "wires": [
            [
                "8d863d1a9c532d06"
            ]
        ]
    },
    {
        "id": "b1c60c9f57f562ec",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "5d17551401247545"
            ]
        ]
    },
    {
        "id": "cd27076f2be7d571",
        "type": "delay",
        "z": "0e85255e3d7e4fcb",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "5362b7fb133f531a"
            ]
        ]
    },
    {
        "id": "7b1a2a97.73a96c",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "1000",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": ""
    }
]